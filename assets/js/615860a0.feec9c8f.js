"use strict";(self.webpackChunkshaft_user_guide=self.webpackChunkshaft_user_guide||[]).push([[4455],{4137:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),f=a,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||i;return r?n.createElement(m,o(o({ref:t},c),{},{components:r})):n.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7797:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(7462),a=(r(7294),r(4137));const i={id:"Quick_Start",title:"Quick Start Guide \ud83c\udfc3",sidebar_label:"Quick Start Guide"},o=void 0,s={unversionedId:"Getting_Started/Quick_Start",id:"Getting_Started/Quick_Start",title:"Quick Start Guide \ud83c\udfc3",description:"Start Here",source:"@site/docs/Getting_Started/Quick_Start.md",sourceDirName:"Getting_Started",slug:"/Getting_Started/Quick_Start",permalink:"/SHAFT_Engine_Docusaurus/docs/Getting_Started/Quick_Start",draft:!1,editUrl:"https://github.com/ShaftHQ/SHAFT_Engine_Docusaurus/blob/master/docs/Getting_Started/Quick_Start.md",tags:[],version:"current",frontMatter:{id:"Quick_Start",title:"Quick Start Guide \ud83c\udfc3",sidebar_label:"Quick Start Guide"}},l={},u=[{value:"Start Here",id:"start-here",level:2}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"start-here"},"Start Here"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a new Java/Maven project using Eclipse, IntelliJ",(0,a.kt)("sup",{parentName:"li",id:"fnref-1"},(0,a.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," or your favourite IDE."),(0,a.kt)("li",{parentName:"ul"},"Copy the highlighted contents of this ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/MohabMohie/using_SHAFT_ENGINE/blob/7bfc918b00dfd2bd674c349a07bcec3fa98913a6/pom.xml#L12-L79"},"pom.xml")," file into yours inside the ",(0,a.kt)("inlineCode",{parentName:"li"},"<project>")," tag."),(0,a.kt)("li",{parentName:"ul"},"Create the following file ",(0,a.kt)("inlineCode",{parentName:"li"},"src/test/resources/testDataFiles/simpleJSON.json"),"."),(0,a.kt)("li",{parentName:"ul"},"Copy the below code snippet into your newly created json file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "searchQuery": "SHAFT_Engine"\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a new Package under ",(0,a.kt)("inlineCode",{parentName:"li"},"src/test/java")," and create a new Java Class under that package."),(0,a.kt)("li",{parentName:"ul"},"Copy the below code snippet into your newly created java class.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class Test_Wizard_GUI {\n    SHAFT.GUI.WebDriver driver;\n    SHAFT.TestData.JSON testData;\n\n    By searchBox = By.name("q");\n    By resultStats = By.id("result-stats");\n\n    @Test\n    public void test() {\n        driver.browser().navigateToURL("https://www.google.com/");\n        driver.verifyThat().browser().title().isEqualTo("Google").perform();\n        driver.element().type(searchBox, testData.getTestData("searchQuery"))\n                .keyPress(searchBox, Keys.ENTER);\n        driver.assertThat().element(resultStats).text().doesNotEqual("")\n                .withCustomReportMessage("Check that result stats is not empty").perform();\n    }\n\n    @BeforeClass\n    public void beforeClass() {\n        driver = new SHAFT.GUI.WebDriver();\n        testData = new SHAFT.TestData.JSON("simpleJSON.json");\n    }\n\n    @AfterClass\n    public void afterClass() {\n        driver.quit();\n    }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run it as a TestNG Test Class."),(0,a.kt)("li",{parentName:"ul"},"The execution report will open automatically in your default web browser after the test run is completed."),(0,a.kt)("li",{parentName:"ul"},"You can change the target browser, operating system, timeouts, and other configurations using the \u2699\ufe0f ",(0,a.kt)("a",{parentName:"li",href:"https://shafthq.github.io/SHAFT_ENGINE/"},"Configuration Manager"),".")))}p.isMDXComponent=!0}}]);