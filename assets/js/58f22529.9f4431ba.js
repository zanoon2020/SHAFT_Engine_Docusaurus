"use strict";(self.webpackChunkshaft_user_guide=self.webpackChunkshaft_user_guide||[]).push([[9841],{4137:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(a),p=o,h=m["".concat(l,".").concat(p)]||m[p]||d[p]||i;return a?r.createElement(h,n(n({ref:t},u),{},{components:a})):r.createElement(h,n({ref:t},u))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,n=new Array(i);n[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,n[1]=s;for(var c=2;c<i;c++)n[c]=a[c];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5299:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=a(7462),o=(a(7294),a(4137));const i={id:"ForceFail",title:"Force Fail",sidebar_labe:"Force Fail"},n=void 0,s={unversionedId:"Keywords/Validations/ForceFail",id:"Keywords/Validations/ForceFail",title:"Force Fail",description:"We can make a customized messages on reports and execute the perform() method via using the forceFails by using the Class ValidationsExecutor through using the following methods:",source:"@site/docs/Keywords/Validations/ForceFail.md",sourceDirName:"Keywords/Validations",slug:"/Keywords/Validations/ForceFail",permalink:"/SHAFT_Engine_Docusaurus/docs/Keywords/Validations/ForceFail",draft:!1,editUrl:"https://github.com/ShaftHQ/SHAFT_Engine_Docusaurus/blob/master/docs/Keywords/Validations/ForceFail.md",tags:[],version:"current",frontMatter:{id:"ForceFail",title:"Force Fail",sidebar_labe:"Force Fail"},sidebar:"docs",previous:{title:"Number",permalink:"/SHAFT_Engine_Docusaurus/docs/Keywords/Validations/Nums"},next:{title:"Browser",permalink:"/SHAFT_Engine_Docusaurus/docs/Configuration/BrowserRelatedFeatures"}},l={},c=[{value:"We can make a customized messages on reports and execute the perform() method via using the forceFails by using the <em>Class ValidationsExecutor</em> through using the following methods:",id:"we-can-make-a-customized-messages-on-reports-and-execute-the-perform-method-via-using-the-forcefails-by-using-the-class-validationsexecutor-through-using-the-following-methods",level:4},{value:"withCustomReportMessage():",id:"withcustomreportmessage",level:3},{value:"perform():",id:"perform",level:4}],u={toc:c};function m(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"we-can-make-a-customized-messages-on-reports-and-execute-the-perform-method-via-using-the-forcefails-by-using-the-class-validationsexecutor-through-using-the-following-methods"},"We can make a customized messages on reports and execute the perform() method via using the forceFails by using the ",(0,o.kt)("em",{parentName:"h4"},"Class ValidationsExecutor")," through using the following methods:"),(0,o.kt)("h3",{id:"withcustomreportmessage"},"withCustomReportMessage():"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We use this method to set a customized business-readable message that will appear in the execution report instead of the technical log message which will be nested under it."),(0,o.kt)("li",{parentName:"ul"},"Needed parameters: customReportMessage - the message that you would like to describe this validation in the execution report."),(0,o.kt)("li",{parentName:"ul"},'This method returns the current ValidationsExecutor object so that you can call the "perform()" method and execute this validation.')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"import com.shaft.validation.Validations;\npublic class Testing {\n    @Test\n    public void testValidations(){\n        //make assertion\n        Validations.assertThat().forceFail().withCustomReportMessage(String customReportMessage).perform();\n        //make verification\n        Validations.verifyThat().forceFail().withCustomReportMessage(String customReportMessage).perform();\n    }\n}\n")),(0,o.kt)("h4",{id:"perform"},"perform():"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We use this method to Execute this validation as without using perform() method the validation method will note be executed regardless on which level we are trying to execute the validation; browser, element, object, number, etc. like previously noticed in the all last examples. ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"import com.shaft.validation.Validations;\npublic class Testing {\n    @Test\n    public void testValidations(){\n        //file\n        //make assertion\n        Validations.assertThat().file(folderRelativePath, file name).doesNotExist().perform();\n        //make verification\n        Validations.verifyThat().file(folderRelativePath, file name).doesNotExist().perform();\n\n        //number\n        //make assertion\n        Validations.assertThat().number((Number) actualNumber).isEqualTo((Number) expectedValue).perform();\n        //make verification\n        Validations.verifyThat().number((Number) actualNumber).isEqualTo((Number) expectedValue).perform();\n\n        //object\n        //make assertion\n        Validations.assertThat().object((Object) actualObject).isEqualTo((Object) expectedValue)).perform();\n        //make verification\n        Validations.verifyThat().object((Object) actualObject).isEqualTo((Object) expectedValue)).per\n        \n        //element\n        //make assertion\n        Validations.assertThat().element(driver, locator).exists().perform();\n        //make verification\n        Validations.verifyThat().element(driver, locator).exists().perform();\n    }\n}\n")))}m.isMDXComponent=!0}}]);